Dan's Winter 2012 post mortem, as responses to  Magda's Fall 2011 post mortem.

I updated the postmortem only after the end of the course, so the
comments are not very fresh.

> Webquiz: Split-up the Lecture 14-17 webquiz. It's too long and
> it covers too many topics. I got multiple complaints.
> 
> I did not have any web quizes about the last few topics because
> I didn't find enough good questions about them. But we need
> to add some concrete exercises for those topics. Otherwise, students
> have only a vague understanding. However, there doesn't seem to be room
> for a 7th homework. Perhaps we should create Gradiance questions?
> 
> Also, the students like the web quizes but I find that students did
> not internalize some of the material (e.g., BCNF decomposition) as
> well as in 444 because there are no assignments on some topics. We
> need to make sure that students do practical exercises for all topics.
> 

I had to redesign the Gradience quizes, on http://newgradiance.com/
The class token for Winter 2012 was:  5660443E

Same idea: the quizzes cover the first part of the course, but do not
cover the second part (transactions and parallel db).


> ---------------------------------------------------------------------
> Course content:
> ---------------------------------------------------------------------
> 
> Lecture 1: I switched to pptx because I prefer this format for
> covering the class logistics and the lecture overview.
> 

I continued the switch to pptx.  I kept the old txt files: wherever there is both txt and pptx, the pptx is more recent and should be used as starting point.

> Lecture 2: I think that the content is mostly fine but I don't think
> students appreciate deeply the notions that we are showing them. It didn't seem
> like the students were all that excited. Also, I think that I'd like to change
> this lecture to pptx next time. I would simply like to reformat the
> notes into pptx, not really add anything more.
> 
> Lecture 3: Even though I moved the indexing discussion to a later
> lecture on database tuning, I stil ran out of time and did not cover
> nulls + rushed outer joins. I think that I tried to demonstrate too
> much. There is no time to run all the queries in these lecture notes
> and also have a good discussion of the content.
> 
> Lecture 4: Plenty of time. With the slides, I comfortably
> covered NULLs, outer-joins, and aggregation up to having.
> 
> Lecture 5: Finished aggregation and starting on physical
> tuning. 
> 
> Lecture 6: 
> -- Lifetime of a query in a DBMS
> -- Basic ideas of how queries can be executed... some algorithms could use an index.
> -- What are indexes?
> -- How to pick what indexes to use?
> Timing was perfect but it helped that I spent 20 min on this at the
> end of Lecture 5.
> 
> Lecture 7: Dan... I did not have time to redo all the examples
> on the slides to follow your new example in the text notes.
> 

I think I did these now.

> Lectures 8: Relational algebra
> -- Tell students about client-server because hw3 uses SQL Server.
> -- Remind students about the life of a query in the system.
> -- Then introduce the relational algebra.
> --> We made it only to the end of the relational algebra in Lecture 8
>     so I'm re-organizing the slides accordingly.
> Note: The slides could use some re-ordering.    
> 

I reorganized some of the lectures, including #8.

> Lecture 9: Query evaluation 
> -- First, review of lecture 8: (1) client-server, (2) life of a query
> from establishing a connection to getting results, (3) role of
> relational algebra in query evaluation processing, (4) write a few
> relational algebra expressions. [15 minutes]
> -- Second, discussing advantages of relational algebra.
> -- Translation from SQL to relational algebra.
> -- Challenge: Logical query plans still not enough details to execute a query
> -- Next move on to logical vs physical query plans.
> -- Query execution for a given physical plan
> -- Conclude by saying that the query optimizer picks the physical query plan.
> -- Go back and discuss indexing now that they know how queries are executed.
> 
> Lecture 10: Datalog.
> Worked well without slides.
> 
> Lecture 11: Relational Calculus.
> Worked well without slides.
> Need more practice.
> 


We have pptx now for datalog and rc.

I lost several lectures because of the snow storm, and holidays, so I compressed datalog and rc.  I also posted my notes on ra/rc/datalog and asked students to read them.  I did not hear any comments from them, but I believe that at least some of them read them, because several students answered the difficult SQL query on the midterm by first writing it in rc, then to datalog, then to SQL, and doing it correctly.



> Lecture 12: XML
> There are too many slides. just droo 20-25% of the slides 
> and have more discussion or demos.
> 

partially done.  no demo.

> Lecture 13: XQuery OK
> 
> Lecture 14 on ER Diagrams and 15 on constraints: ok but a bit boring.
> 
> Lecture 17 on views: I re-did the slides as per the notes.
> 
> Series of lectures on transactions:
> 
> Lecture 18 
> -- Basic demo: what happens without transactions
> and how we can fix it with transactions.
> -- Definition of a transaction
> -- ACID properties
> -- How transactions protect against both concurrency and failures
> -- How transactions simplify application development
> Note: I also spent 10 min talking about the data intensive biology (DISW)
> workshop as a way to get students excited about open problems with fun implications.
> 
> Lecture 19
> -- All about locking.
> -- Demo showing SQL Server and different
> isolation levels.
> -- Deadlocks
> I didn't do a good job talking about schedules and how to check
> if a schedule is conflict-serializable. This part needs to be improved.
> 
> Lecture 20
> -- We reviewed Lecture 19. That was useful because
> students were still confused about key concepts.
> -- Then we discussed going beyond transactions. That worked well.
> 
> Lecture 21-24 Parallel DBMSs and MapReduce
> 
> This series of lectures is good but it goes too fast.
> Students have never seen parallel data processing before.
> We need to go slower and give more white-board examples.
> So I added an extra lecture to cover this topic without rushing.
> 
> We need to change the slides to more clearly indicate what is a *job*
> and what is a *task*.
> 

Indeed, this discussion is very usueful.  I added it to pptx, and discussed it repeatedly in class. Students got it now.

> Also, we should go through a concrete exampl of translating a pig
> script into a set of MapReduce jobs. And we need some examples
> of writing MapReduce applications. There was no time in sections
> because of hw6 setup questions.
> 
> 
> Lecture 25: DBMS-as-a-service + NoSQL
> 
> The part about No SQL is most interesting and
> did nto come through. I suggest removing the stuff
> about the Google and Azure clouds and just focus on SimpleDB
> as an example of a NoSQL data management system. This way,
> they will have two examples: MapReduce and SimpleDB.
> 
> Lecture 26-27: Data integration and data cleaning.
> Ok lectures but I agree that it would be good for students
> to practice this material.
